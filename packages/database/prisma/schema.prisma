// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  SUPERADMIN
  ADMIN
}


model User {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String   @unique
  userType     UserType @map("user_type")
  passwordHash String  @map("password_hash")
  salt 		     String 	@map("salt")
  createdAt    DateTime @default(now()) @map("created_at")


  @@map("users")
}

model Event {
  id         Int      @id @default(autoincrement())
  name       String
  sourceUrl  String
  row        String?
  section    String?
  groupSize  Int?
  expectedPrice  Float?
  createdAt  DateTime @default(now())

  seats      EventSeat[]
  zonePrices EventZonePrice[]
}

model EventSeat {
  id         Int    @id @default(autoincrement())
  seatNo     String
  seatStatus String
  seatType   String
  zoneLabel  String
  price      Float
  eventId    Int
  event      Event @relation(fields: [eventId], references: [id])
}

model EventZonePrice {
  id        Int    @id @default(autoincrement())
  zoneColor String
  price     Float
  eventId   Int
  event     Event @relation(fields: [eventId], references: [id])
}

model SeatMapping {
  seat_no        Int     @id @unique // Primary key, unique seat number
  row            String  // The row the seat is in
  adjacent_seats Int[]   // List of adjacent seat_no values
}